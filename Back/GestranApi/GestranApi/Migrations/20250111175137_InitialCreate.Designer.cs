// <auto-generated />
using GestranApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestranApi.Migrations
{
    [DbContext(typeof(GestranDbContext))]
    [Migration("20250111175137_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestranApi.Models.Entidades.Checklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioAlteracao")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioExecutor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdStatus");

                    b.HasIndex("IdUsuarioAlteracao");

                    b.HasIndex("IdUsuarioExecutor");

                    b.ToTable("Checklist");
                });

            modelBuilder.Entity("GestranApi.Models.Entidades.ChecklistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Executado")
                        .HasColumnType("bit");

                    b.Property<int>("IdChecklist")
                        .HasColumnType("int");

                    b.Property<int>("IdItem")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioAlteracao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdChecklist");

                    b.HasIndex("IdItem");

                    b.HasIndex("IdUsuarioAlteracao");

                    b.ToTable("ChecklistItem");
                });

            modelBuilder.Entity("GestranApi.Models.Entidades.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdUsuarioAlteracao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioAlteracao");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("GestranApi.Models.Entidades.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("GestranApi.Models.Entidades.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("TipoUsuario");
                });

            modelBuilder.Entity("GestranApi.Models.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("GestranApi.Models.Entidades.Checklist", b =>
                {
                    b.HasOne("GestranApi.Models.Entidades.Status", "Status")
                        .WithMany()
                        .HasForeignKey("IdStatus")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GestranApi.Models.Entidades.Usuario", "UsuarioAlteracao")
                        .WithMany()
                        .HasForeignKey("IdUsuarioAlteracao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GestranApi.Models.Entidades.Usuario", "UsuarioExecutor")
                        .WithMany()
                        .HasForeignKey("IdUsuarioExecutor")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Status");

                    b.Navigation("UsuarioAlteracao");

                    b.Navigation("UsuarioExecutor");
                });

            modelBuilder.Entity("GestranApi.Models.Entidades.ChecklistItem", b =>
                {
                    b.HasOne("GestranApi.Models.Entidades.Checklist", "Checklist")
                        .WithMany("ChecklistItens")
                        .HasForeignKey("IdChecklist")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestranApi.Models.Entidades.Item", "Item")
                        .WithMany("ItensChecklist")
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestranApi.Models.Entidades.Usuario", "UsuarioAlteracao")
                        .WithMany()
                        .HasForeignKey("IdUsuarioAlteracao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Checklist");

                    b.Navigation("Item");

                    b.Navigation("UsuarioAlteracao");
                });

            modelBuilder.Entity("GestranApi.Models.Entidades.Item", b =>
                {
                    b.HasOne("GestranApi.Models.Entidades.Usuario", "UsuarioAlteracao")
                        .WithMany()
                        .HasForeignKey("IdUsuarioAlteracao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UsuarioAlteracao");
                });

            modelBuilder.Entity("GestranApi.Models.Entidades.Checklist", b =>
                {
                    b.Navigation("ChecklistItens");
                });

            modelBuilder.Entity("GestranApi.Models.Entidades.Item", b =>
                {
                    b.Navigation("ItensChecklist");
                });
#pragma warning restore 612, 618
        }
    }
}
